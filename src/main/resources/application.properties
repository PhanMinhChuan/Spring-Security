# config SSL/TLS
server.port: 8443
server.ssl.key-store: src/main/resources/minhchuan.keystore
server.ssl.key-store-password: admin1234
server.ssl.keyAlias: springboot

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.dataSource.url = jdbc:mysql://localhost:3306/demoJWT?useSSL= false
spring.dataSource.username = root
spring.dataSource.password =

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#flyway
spring.flyway.baseline-on-migrate = true

# config facebook social
facebook.app.id=180439422588509
facebook.app.secret=3e808bc29b78df7f46725782c206d9b0
facebook.redirect.uri=https://localhost:8443/login-facebook
facebook.link.get.token=https://graph.facebook.com/oauth/access_token?client_id=%s&client_secret=%s&redirect_uri=%s&code=%s

# config google social
google.app.id=80724656105-fg2ndheoujm7c7dd4ob1i9mq3ebdbjhb.apps.googleusercontent.com
google.app.secret=PrmoOSPhKsilVqpzxrzjOoEU
google.redirect.uri=https://localhost:8443/login-google
google.link.get.token=https://accounts.google.com/o/oauth2/token
google.link.get.user_info=https://www.googleapis.com/oauth2/v1/userinfo?access_token=

# config linkedin social
linkedin.client.id=81wqf7krhgqevu
linkedin.client.secret=kfgIdotQioQxG99f
linkedin.redirect.uri=https://localhost:8443/login-linkedin
linkedin.link.get.token=https://www.linkedin.com/oauth/v2/accessToken
linkedin.link.get.user_info=https://api.linkedin.com/v1/people/~?format=json&oauth2_access_token=
linkedin.grant_type=authorization_code